# AFL Workload & Heatmap Pipeline

This repo provides **workload metrics** and **heatmap visualisations** from AFL player tracking data.  
It processes coordinate-based tracking files (`tracking.csv`) and delivers outputs consumable by the frontend.

---

## 📂 Project structure

afl-workload-pipeline/
├─ config.yaml                 # thresholds & settings (edit here, no code changes needed)
├─ examples/
│  ├─ tracking.csv             # sample input (~200 frames)
│  ├─ out_workload.json        # sample workload output
│  ├─ out_workload.csv         # same data in CSV format
│  └─ heatmaps/                # sample generated PNGs
├─ scripts/
│  ├─ compute_workload.py      # workload metrics CLI
│  └─ generate_heatmaps.py     # heatmap generation CLI
├─ workload/                   # workload metric logic (distance, speed, HSR, ratios)
├─ heatmaps/                   # heatmap logic (grid, blur, render)
└─ tests/                      # unit tests

## ⚙️ Setup

Clone and set up environment:

```bash
git clone https://github.com/<USERNAME>/afl-workload-pipeline.git
cd afl-workload-pipeline

python3 -m venv .venv
source .venv/bin/activate

pip install -r requirements.txt   # or: pip install pandas numpy pyyaml scipy matplotlib imageio

python scripts/compute_workload.py \
  --tracking examples/tracking.csv \
  --config config.yaml \
  --out-json examples/out_workload.json \
  --out-csv  examples/out_workload.csv

Outputs:
	•	JSON: per-player workload indicators (distance, speed, HSR, work/rest, workload score, fatigue risk).
	•	CSV: tidy table for spreadsheets / BI tools.

python scripts/generate_heatmaps.py \
  --tracking examples/tracking.csv \
  --config config.yaml \
  --out-dir examples/heatmaps \
  --group-by player_id

Outputs:
	•	PNG heatmaps in examples/heatmaps/
	•	Configurable grid size (nx, ny), blur (sigma), and weighting mode (conf).

